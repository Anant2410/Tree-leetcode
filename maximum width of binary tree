int widthOfBinaryTree(TreeNode* root) {
        if(root==NULL) return 0;
        int ans = 0;
        
        queue<pair<TreeNode*, int>>q;
        q.push({root,0});
        
        while(!q.empty()){
            int size = q.size();
            int mini = q.front().second;
            int f,l;
            for(int i=0;i<size;i++){
                int curr = q.front().second-mini;
                TreeNode* node = q.front().first;
                q.pop();
                if(i==0) f = curr;
                if(i==size-1) l = curr;
                if(node->left)
                    q.push({node->left, (long long)curr*2+1});
                if(node->right)
                    q.push({node->right,(long long)curr*2+2});
            }
            ans = max(ans,l-f+1);
        }
        return ans;
    }
